<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.hivesys.statistic.mapper.StatisticMapper">
<!-- 
수정일           수정자         수정내용 
========= ======= ================================================= 
2020.07.23 정다빈     최초 생성 
-->
	
	<resultMap type="terminalVO" id="resultTerminalVo">
		<result property="trainNo" column="train_no"/>
		<result property="deviceIp" column="device_ip"/>
		<result property="deviceMac" column="device_mac"/>
		<result property="insLocTxt" column="INS_LOC_TXT"/>
		<result property="deviceUsed" column="device_used"/>
		<result property="gatewayIp" column="gateway_ip"/>
		<result property="deviceUser" column="device_user"/>
		<result property="etc" column="etc"/>
		<result property="regDt" column="reg_dt"/>
		
		<result property="rcvDt" column="rcv_dt"/>
		<result property="trainNo" column="train_no"/>
		<result property="formationNo" column="formation_no"/>
		<result property="activeCap" column="active_cap"/>
		<result property="trainCnt" column="train_cnt"/>
		<result property="trainAddCnt" column="train_add_cnt"/>
		<result property="deviceIp" column="device_ip"/>
		<result property="deviceMac" column="device_mac"/>
		<result property="kpa1" column="kpa1"/>
		<result property="kpa2" column="kpa2"/>
		<result property="kpa3" column="kpa3"/>
		<result property="kpa4" column="kpa4"/>
		<result property="kpa5" column="kpa5"/>
		<result property="kpa6" column="kpa6"/>
		<result property="kpa7" column="kpa7"/>
		<result property="kpa8" column="kpa8"/>
		<result property="rate1" column="rate1"/>
		<result property="rate2" column="rate2"/>
		<result property="rate3" column="rate3"/>
		<result property="rate4" column="rate4"/>
		<result property="rate5" column="rate5"/>
		<result property="rate6" column="rate6"/>
		<result property="rate7" column="rate7"/>
		<result property="rate8" column="rate8"/>
		<result property="errorRange" column="error_range"/>
	</resultMap>
	
	<!-- 메인화면 게이지 차트 -->
	<select id="mainGaugeChart" parameterType="terminalVO" resultType="chartVo">
	    WITH gauge AS (
			SELECT 
			    train_no
			   ,rcv_dt
			   <!-- ,train_add_cnt+2 AS sum_rate1 -->
			   ,train_cnt AS sum_rate1
				,rate1,rate2,rate3,rate4,rate5,rate6
<!-- 				,CASE WHEN train_add_cnt =1 THEN (RATE1+RATE2+RATE3)/3
			 		 WHEN train_add_cnt =2 THEN (RATE1+RATE2+RATE3+RATE4)/4
					 WHEN train_add_cnt =3 THEN (RATE1+RATE2+RATE3+RATE4+RATE5)/5
				    WHEN train_add_cnt =4 THEN (RATE1+RATE2+RATE3+RATE4+RATE5+RATE6)/6
			   ELSE IF(RATE1>2,1,0)+IF(RATE2>2,1,0) END -->
			   ,IF(RATE1>2,1,0)+IF(RATE2>2,1,0)+IF(RATE3>2,1,0)+IF(RATE4>2,1,0)+IF(RATE5>2,1,0)+IF(RATE6>2,1,0)+IF(RATE7>2,1,0)+IF(RATE8>2,1,0)			   			   
			   AS sum_rate2
			FROM TCMS_LOG
			WHERE 1=1
			<if test="formationNo !=null and formationNo neq ''"> 
				AND formation_no=#{formationNo}
			</if>
			AND RCV_DT>=CURDATE()
		)
		SELECT 
		 <!-- SUM(sum_rate1) AS gaugePointCnt
		,SUM(sum_rate2) AS gaugeAllCnt -->
		ROUND((SUM(sum_rate2) / SUM(sum_rate1)) * 100,0) as gaugePointCnt
		FROM gauge a
	</select>
	
	<!-- 메인화면 바 차트 -->
	<select id="mainBarChart" parameterType="terminalVO" resultType="chartVo">
	    
	    WITH RECURSIVE DT_TABLE AS (
		    SELECT NOW() dt, 1 lv FROM dual
		    UNION all
		    SELECT DATE_ADD(NOW(), INTERVAL DT_TABLE.lv HOUR) dt, DT_TABLE.lv+1 AS lv FROM DT_TABLE WHERE DT_TABLE.lv   <![CDATA[ < ]]> 24 
		)
		SELECT tm.dt AS xVal,IFNULL(val.yVal,0) as yVal from		
		(SELECT 
		   HOUR(dt) AS dt
		FROM DT_TABLE
		ORDER BY dt ASC
		)tm
	    left join
		(
			SELECT xVal
			,ROUND(AVG(sum_rate),0) AS yVal
			FROM
			(
				SELECT 
					 DATE_FORMAT(RCV_DT, '%H') AS xVal
					 ,train_cnt
					 ,train_add_cnt
					 <!-- ##중편수에 따른 평균 혼잡도 계산 -->
					 <!-- ,CASE WHEN train_add_cnt =1 THEN (RATE1+RATE2+RATE3)/3
					 		 WHEN train_add_cnt =2 THEN (RATE1+RATE2+RATE3+RATE4)/4
							 WHEN train_add_cnt =3 THEN (RATE1+RATE2+RATE3+RATE4+RATE5)/5
			 			    WHEN train_add_cnt =4 THEN (RATE1+RATE2+RATE3+RATE4+RATE5+RATE6)/6
					 ELSE (RATE1+RATE2)/2 END -->
					 <!-- TRAIN_CNT와 TRAIN_ADD_CNT의 값에 따라 달라짐 -->
					  ,round((rate1+rate2+rate3+rate4+rate5+rate6+rate7+rate8)/train_cnt,0)
					 AS sum_rate
				FROM TCMS_LOG 
				WHERE 1=1
				<if test="formationNo !=null and formationNo neq ''"> 
					AND formation_no=#{formationNo}
				</if>
				AND RCV_DT>=CURDATE()
			)A
			GROUP BY xVal
		)val
		on tm.dt=val.xVal
		ORDER BY xVal 
	    
	</select>
	
	<select id="selectDayLilst" parameterType="terminalVO" resultMap="resultTerminalVo">
		SELECT J2.*,D.* FROM
	    (
	    SELECT J1.*,C.* FROM
			(SELECT A.*,B.* FROM
			    (SELECT 
					 `LTE-R_IP` AS IP1
					,`LTE-R_USED`
					,`LTE-R_SIM_NO`
					,`LTE-R_CODE`
					,`REG_YDT`
				FROM
					tbl_router_info
				) A
				LEFT JOIN 
				(
					SELECT 
						 DEPART_CODE
						,DEPART_NAME
						,CPY_NAME
						,CPY_CODE
						,HQ_NAME
						,HQ_CODE
						,TEAM_NAME
						,TEAM_CODE
						,REG_YDT AS DEPART_DATE
					FROM tbl_depart_info
				)B
				ON(SUBSTR(A.`LTE-R_CODE`,1,11)=B.DEPART_CODE)
				ORDER BY A.REG_YDT
			)J1
			RIGHT JOIN
			(SELECT 
			 `LTE-R_IP`
			,`LTE-R_MAC_ADD`
			,key_date
			,ROUND(AVG(`LTE-R_RSSI_VAL`),2) AS `LTE-R_RSSI_VAL`
			,ROUND(AVG(`LTE-R_RSRP_VAL`),2) AS `LTE-R_RSRP_VAL`
			,ROUND(AVG(`LTE-R_RSRQ_VAL`),2) AS `LTE-R_RSRQ_VAL`
			,ROUND(AVG(`MEM_CRIT_VAL`),2) AS `MEM_CRIT_VAL`
			,ROUND(AVG(`LTE-R_COM_UP_VAL`),2) AS `LTE-R_COM_UP_VAL`
			,ROUND(AVG(`LTE-R_COM_DN_VAL`),2) AS `LTE-R_COM_DN_VAL`
			FROM
				(
					SELECT
					`LTE-R_IP`,`LTE-R_MAC_ADD`
					<choose>
					    <when test="keyType eq 'monStat'">
							,DATE_FORMAT(key_date, '%Y-%m') AS key_date
					    </when>
					    <when test="keyType eq 'yearStat'">
							,DATE_FORMAT(key_date, '%Y') AS key_date
					    </when>
					    <otherwise>
					     	,KEY_DATE
					    </otherwise>
					</choose>
					,`LTE-R_RSSI_VAL`,`LTE-R_RSRP_VAL`
					,`LTE-R_RSRQ_VAL`,`MEM_CRIT_VAL`
					,`LTE-R_COM_UP_VAL`,`LTE-R_COM_DN_VAL` 
					FROM stat_receive_data_day 
					WHERE 1=1 
					<choose>
					    <when test="keyType eq 'monStat'">
							AND  DATE_FORMAT(key_date, '%Y-%m') = #{keyDate}
					    </when>
					    <when test="keyType eq 'yearStat'">
							AND  DATE_FORMAT(key_date, '%Y') = #{keyDate}
					    </when>
					    <otherwise>
					     	AND KEY_DATE=#{keyDate}
					    </otherwise>
					</choose>
				)T
				GROUP BY T.`LTE-R_IP`,T.`KEY_DATE`
			)C
			ON(J1.`IP1`=C.`LTE-R_IP`)
		)J2
		LEFT JOIN
		(
			SELECT 
			 `LTE-R_IP` AS LTEIP
			,`LTE-R_CELL_ID`
			,`OBS_CODE`
			,`FAILURE_REG_YDT`
			,`FAILBACK_YDT`
			FROM TBL_OBS_HISTORY
			WHERE 1=1 
			<choose>
			    <when test="keyDate != null and keyDate neq ''">
					AND FAILURE_REG_YDT=#{keyDate}
			    </when>
			    <otherwise>
			     	AND FAILURE_REG_YDT= DATE_FORMAT(NOW() - INTERVAL 1 DAY,'%Y-%m-%d')
			    </otherwise>
			</choose>
		)D
		ON(J2.`LTE-R_IP`=D.LTEIP)
	</select>

</mapper>